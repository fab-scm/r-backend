arima(hum, c(1, 0, 0))$aic
arima(hum, c(2, 0, 0))$aic
arima(hum, c(3, 0, 0))$aic
arima(hum, c(4, 0, 0))$aic
arima(hum, c(5, 0, 0))$aic
arima(hum, c(6, 0, 0))$aic
arima(hum, c(7, 0, 0))$aic
arima(hum, c(8, 0, 0))$aic
arima(hum, c(9, 0, 0))$aic
arima(hum, c(10, 0, 0))$aic
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l", main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l", main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", ylab="Temperatur °C")
library(readxl)
Mutterdatei_aktualisiert <- read_excel("Mutterdatei_aktualisiert.xlsx")
# remove NA values
messdaten<-na.omit(Mutterdatei_aktualisiert)
View(messdaten)
library(lubridate)
#Absoluter Maximalwert
MaxT<-max(messdaten$AirTC_Max,na.rm=T)
# remove NA values
messdaten<-na.omit(Mutterdatei_aktualisiert)
Mutterdatei_aktualisiert <- read_excel("Mutterdatei_aktualisiert.xlsx")
Mutterdatei_aktualisiert <- read_excel("/Mutterdatei_aktualisiert.xlsx")
library(readxl)
Mutterdatei_aktualisiert <- read_excel("/Mutterdatei_aktualisiert.xlsx")
Mutterdatei_aktualisiert <- read_excel("/Mutterdatei_aktualisiert.xlsx")
Mutterdatei_aktualisiert <- read_excel("/Users/freddy/Desktop/uni/Klimatologie/Übung/Messdaten/Mutterdatei_aktualisiert.xlsx")
# remove NA values
messdaten<-na.omit(Mutterdatei_aktualisiert)
View(messdaten)
library(lubridate)
#Absoluter Maximalwert
MaxT<-max(messdaten$AirTC_Max,na.rm=T)
MaxT.Eintrag<-which(messdaten$AirTC_Max==MaxT)
messdaten[MaxT.Eintrag,]
#Absoluter Minimalwert
MinT<-min(messdaten$AirTC_Min,na.rm=T)
MinT.Eintrag<-which(messdaten$AirTC_Min==MinT)
messdaten[MinT.Eintrag,]
# Temp ganz
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type='l', main="Temperatur", ylim=c(0,30), col="red", xlab="Zeitraum", ylab="Temperatur in °C")
# Temp Durchschnitt kompletter Zeitraum
mean(messdaten$AirTC_Avg) # = 16.10826
# Temp Min/Max kompletter Zeitraum
min(messdaten$AirTC_Avg) # = 7.266
max(messdaten$AirTC_Avg) # = 28.24
# Temperaturamplitude
max(messdaten$AirTC_Avg) - min(messdaten$AirTC_Avg) # = 20.974
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l", main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$SWup_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$SWup_Avg)))
mtext("Kurzwellige Einstrahlung [W/m^2]", side = 4, line = 3)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"),col=c("red", "blue"),bty = "n",cex = 0.5,lwd = 2)
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l", main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$SWup_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$SWup_Avg)))
mtext("Kurzwellige Einstrahlung [W/m^2]", side = 4, line = 3)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"),col=c("red", "blue"),bty = "0",cex = 0.5,lwd = 2)
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l", main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$SWup_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$SWup_Avg)))
mtext("Kurzwellige Einstrahlung [W/m^2]", side = 4, line = 3)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"),col=c("red", "blue"),bty = "0",cex = 0.5,lwd = 1)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"),col=c("red", "blue"),bty = "0",cex = 0.5,lwd = 0.2)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"),col=c("red", "blue"),bty = "0",cex = 0.1,lwd = 2)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"),col=c("red", "blue"),bty = "0",cex = 0.3,lwd = 2)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"),fill, col=c("red", "blue"),bty = "0",cex = 0.3,lwd = 2)
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l", main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$SWup_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$SWup_Avg)))
mtext("Kurzwellige Einstrahlung [W/m^2]", side = 4, line = 3)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"),fill, col=c("red", "blue"),bty = "0",cex = 0.3,lwd = 2)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"),fill, col=c("red", "blue"),bty = "0",cex = 0.3,lwd = 2, lty=1:2)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"),fill, col=c("red", "blue"),bty = "0",cex = 0.3,lwd = 2,adj = c(0, 0.6))
legend("topleft", legend=c("Temp", "Rain"))
legend("topleft", legend=c("Temp", "Rain").cex = 0.5)
legend("topleft", legend=c("Temp", "Rain"), cex = 0.5)
# Plot Temp + Rain
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Niederschlag", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$Rain_Tot, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$Rain_Tot)))
mtext("Niederschlag [mm/m^2]", side = 4, line = 3)
legend("topleft", legend=c("Temp", "Rain"), cex = 0.5)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"),fill, col=c("red", "blue"),cex = 0.5)
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l", main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$SWup_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$SWup_Avg)))
mtext("Kurzwellige Einstrahlung [W/m^2]", side = 4, line = 3)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"),fill, col=c("red", "blue"),cex = 0.5)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"), col=c("red", "blue"),cex = 0.5)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"), col=c("red", "blue"),pt.cex = 0.5)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"), col=c("red", "blue"),cex = 0.5, pt.cex = 0.5)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"), col=c("red", "blue"),cex = 0.2, pt.cex = 0.5)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"), col=c("red", "blue"),cex = 0.2, pt.cex = 2)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"), col=c("red", "blue"), pt.cex = 2)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"), col=c("red", "blue"),cex = 0.2)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"), col=c("red", "blue"),cex = 0.2, pt.cex = 1)
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 2) + 0.1)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l", main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$SWup_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$SWup_Avg)))
mtext("Kurzwellige Einstrahlung [W/m^2]", side = 4, line = 3)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"), col=c("red", "blue"),cex = 0.2, pt.cex = 1)
legend("topleft", legend=c("Temperatur", "Kurzwellige Einstrahlung"), col=c("red", "blue"),cex = 0.4, pt.cex = 1)
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 2) + 0.1)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l", main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$SWup_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$SWup_Avg)))
mtext("Kurzwellige Einstrahlung [W/m^2]", side = 4, line = 3)
legend("topright", legend=c("Temperatur", "Kurzwellige Einstrahlung"), col=c("red", "blue"),cex = 0.4, pt.cex = 1)
# Plot Temp + Rain
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Niederschlag", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$Rain_Tot, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$Rain_Tot)))
mtext("Niederschlag [mm]", side = 4, line = 3)
legend("bottomright", c("Maximaltemperatur","Minimaltemperatur"), pch=15, col=c("red","blue"))
#####
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Relative Feuchte", col="red", xlab="Datum", ylab="Temperatur [°C]", xlim=c(min(messdaten$TIMESTAMP),max(messdaten$TIMESTAMP)))
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$RH_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$RH_Avg)))
mtext("Relative Feuchte [%]", side = 4, line = 3)
legend("bottomright", c("Temperatur","Rel. Feuchte"), pch=15, col=c("red","blue"))
library(readxl)
Mutterdatei_aktualisiert <- read_excel("/Users/freddy/Desktop/uni/Klimatologie/Übung/Messdaten/Mutterdatei_aktualisiert.xlsx")
# remove NA values
messdaten<-na.omit(Mutterdatei_aktualisiert)
View(messdaten)
library(lubridate)
#Absoluter Maximalwert
MaxT<-max(messdaten$AirTC_Max,na.rm=T)
MaxT.Eintrag<-which(messdaten$AirTC_Max==MaxT)
messdaten[MaxT.Eintrag,]
#Absoluter Minimalwert
MinT<-min(messdaten$AirTC_Min,na.rm=T)
MinT.Eintrag<-which(messdaten$AirTC_Min==MinT)
messdaten[MinT.Eintrag,]
# Temp ganz
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type='l', main="Temperatur", ylim=c(0,30), col="red", xlab="Zeitraum", ylab="Temperatur in °C")
# Temp Durchschnitt kompletter Zeitraum
mean(messdaten$AirTC_Avg) # = 16.10826
# Temp Min/Max kompletter Zeitraum
min(messdaten$AirTC_Avg) # = 7.266
max(messdaten$AirTC_Avg) # = 28.24
# Temperaturamplitude
max(messdaten$AirTC_Avg) - min(messdaten$AirTC_Avg) # = 20.974
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 2) + 0.1)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l", main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$SWup_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$SWup_Avg)))
mtext("Kurzwellige Einstrahlung [W/m^2]", side = 4, line = 3)
legend("topright", legend=c("Temperatur", "Kurzwellige Einstrahlung"), col=c("red", "blue"),cex = 0.4, pt.cex = 1)
#####
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Relative Feuchte", col="red", xlab="Datum", ylab="Temperatur [°C]", xlim=c(min(messdaten$TIMESTAMP),max(messdaten$TIMESTAMP)))
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$RH_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$RH_Avg)))
mtext("Relative Feuchte [%]", side = 4, line = 3)
legend("bottomright", c("Temperatur","Rel. Feuchte"), pch=15, col=c("red","blue"))
legend("bottomright", c("Temperatur","Rel. Feuchte"), pch=10, col=c("red","blue"))
# Plot Temp + Rain
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Niederschlag", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$Rain_Tot, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$Rain_Tot)))
mtext("Niederschlag [mm]", side = 4, line = 3)
legend("bottomright", c("Maximaltemperatur","Minimaltemperatur"), pch=15, col=c("red","blue"))
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 2) + 0.1)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l", main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$SWup_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$SWup_Avg)))
mtext("Kurzwellige Einstrahlung [W/m^2]", side = 4, line = 3)
legend("topright", legend=c("Temperatur", "Kurzwellige Einstrahlung"), col=c("red", "blue"),cex = 0.4, pt.cex = 1)
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 2) + 0.1)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l", main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$SWup_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$SWup_Avg)))
mtext("Kurzwellige Einstrahlung [W/m^2]", side = 4, line = 3)
legend("topright", legend=c("Temperatur", "Kurzwellige Einstrahlung"), col=c("red", "blue"))
# Plot Temp + Rain
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Niederschlag", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$Rain_Tot, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$Rain_Tot)))
mtext("Niederschlag [mm]", side = 4, line = 3)
legend("bottomright", c("Maximaltemperatur","Minimaltemperatur"), pch=15, col=c("red","blue"))
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 2) + 0.1)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l", main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$SWup_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$SWup_Avg)))
mtext("Kurzwellige Einstrahlung [W/m^2]", side = 4, line = 3)
legend("bottomright", c("Temperatur","Kurzwellige Einstrahlung"), pch=15, col=c("red","blue"))
?legende
?legend
# Plot Temp + spezFeuchte
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Spezifische Feuchte", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$spezFeuchte, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$spezFeuchte)))
mtext("Spezifische Feuchte [g/kg]", side = 4, line = 3)
legend("topleft", legend=c("Temp", "spezFeucht"),col=c("red", "blue"),bty = "n",cex = 0.3,lwd = 2)
# spez Feuchte errechnen
spezFeuchte <- (((0.622*((messdaten$RH_Avg/100)*(6.112*(2.71828^(17.62*messdaten$AirTC_Avg/(243.12+messdaten$AirTC_Avg))))))/(1013.25-0.378*((messdaten$RH_Avg/100)*(6.112*(2.71828^(17.62*messdaten$AirTC_Avg/(243.12+messdaten$AirTC_Avg)))))))*1000)
spezFeuchte->messdaten$spezFeuchte
# Plot Temp + spezFeuchte
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Spezifische Feuchte", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$spezFeuchte, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$spezFeuchte)))
mtext("Spezifische Feuchte [g/kg]", side = 4, line = 3)
legend("topleft", legend=c("Temp", "spezFeucht"),col=c("red", "blue"),bty = "n",cex = 0.3,lwd = 2)
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 2) + 0.1)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l", main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", ylab="Temperatur °C")
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$SWup_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$SWup_Avg)))
mtext("Kurzwellige Einstrahlung [W/m^2]", side = 4, line = 3)
legend("topleft", c("Temperatur","Kurzwellige Einstrahlung"), pch=15, col=c("red","blue"))
###
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Relative Feuchte", col="red", xlab="Datum", ylab="Temperatur [°C]", xlim=c(min(messdaten$TIMESTAMP),max(messdaten$TIMESTAMP)))
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$RH_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$RH_Avg)))
mtext("Relative Feuchte [%]", side = 4, line = 3)
legend("bottomright", c("Temperatur","Rel. Feuchte"), pch=15, col=c("red","blue"))
dates <- seq(as.Date("04/01/2012", format = "%d/%m/%Y"),
by = "days", length = length(messdaten$TIMESTAMP))
axis.POSIXct(1, at=seq(min(dates), max(dates),
by="1 day"), format="%d-%m-%Y")
###
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Relative Feuchte", col="red", xlab="Datum", ylab="Temperatur [°C]", xlim=c(min(messdaten$TIMESTAMP),max(messdaten$TIMESTAMP)))
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$RH_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$RH_Avg)))
mtext("Relative Feuchte [%]", side = 4, line = 3)
legend("bottomright", c("Temperatur","Rel. Feuchte"), pch=15, col=c("red","blue"))
xaxt = "n"
dates <- seq(as.Date("04/01/2012", format = "%d/%m/%Y"),
by = "days", length = length(messdaten$TIMESTAMP))
axis.POSIXct(1, at=seq(min(dates), max(dates),
by="1 day"), format="%d-%m-%Y")
####
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", xaxt = "n", ylab="Temperatur [°C]", xlim=c(min(messdaten$TIMESTAMP),max(messdaten$TIMESTAMP)))
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$Rain_Tot, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$Rain_Tot)))
mtext("Niederschlag [mm]", side = 4, line = 3)
legend("bottomright", c("Temperatur","Niederschlag"), pch=15, col=c("red","blue"))
#### Niederschlag
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Niederschlag", col="red", xlab="Datum", xaxt = "n", ylab="Temperatur [°C]", xlim=c(min(messdaten$TIMESTAMP),max(messdaten$TIMESTAMP)))
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$Rain_Tot, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$Rain_Tot)))
mtext("Niederschlag [mm]", side = 4, line = 3)
legend("topleft", c("Temperatur","Niederschlag"), pch=15, col=c("red","blue"))
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", xaxt = "n", ylab="Temperatur [°C]", xlim=c(min(messdaten$TIMESTAMP),max(messdaten$TIMESTAMP)))
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$SWup_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$SWup_Avg)))
mtext("Kurzwellige Einstrahlung [W/m^2]", side = 4, line = 3)
legend("bottomright", c("Temperatur","Kurzwellige Einstrahlung"), pch=15, col=c("red","blue"))
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", xaxt = "n", ylab="Temperatur [°C]", xlim=c(min(messdaten$TIMESTAMP),max(messdaten$TIMESTAMP)))
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$SWup_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$SWup_Avg)))
mtext("Kurzwellige Einstrahlung [W/m^2]", side = 4, line = 3)
legend("bottomright", c("Temperatur","Kurzwellige Einstrahlung"), pch=15, col=c("red","blue"))
# Plot Temp + SWup (Einstrahlung)
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Kurzwellige Einstrahlung", col="red", xlab="Datum", ylab="Temperatur [°C]", xlim=c(min(messdaten$TIMESTAMP),max(messdaten$TIMESTAMP)))
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$SWup_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$SWup_Avg)))
mtext("Kurzwellige Einstrahlung [W/m^2]", side = 4, line = 3)
legend("bottomright", c("Temperatur","Kurzwellige Einstrahlung"), pch=15, col=c("red","blue"))
###
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Relative Feuchte", col="red", xlab="Datum", xaxt = "n", ylab="Temperatur [°C]", xlim=c(min(messdaten$TIMESTAMP),max(messdaten$TIMESTAMP)))
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$RH_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$RH_Avg)))
mtext("Relative Feuchte [%]", side = 4, line = 3)
legend("bottomright", c("Temperatur","Rel. Feuchte"), pch=15, col=c("red","blue"))
Days<-cut(messdaten$TIMESTAMP, "1 day", right=T)
axis.POSIXct(1, at=Days, format="%d.%m.")
###
par(mar = c(5, 4, 4, 4) + 0.3)
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type="l",main="Vergleich Temperatur - Relative Feuchte", col="red", xlab="Datum", ylab="Temperatur [°C]", xlim=c(min(messdaten$TIMESTAMP),max(messdaten$TIMESTAMP)))
par(new = TRUE)
plot(messdaten$TIMESTAMP, messdaten$RH_Avg, type="l", col="blue", axes = FALSE, xlab = "", ylab = "")
axis(side = 4, at = pretty(range(messdaten$RH_Avg)))
mtext("Relative Feuchte [%]", side = 4, line = 3)
legend("bottomright", c("Temperatur","Rel. Feuchte"), pch=15, col=c("red","blue"))
Days<-cut(messdaten$TIMESTAMP, "1 day", right=T)
axis.POSIXct(1, at=Days, format="%d.%m.")
# Temp ganz
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type='l', main="Temperatur", ylim=c(0,30), col="red", xlab="Zeitraum", ylab="Temperatur in °C", xaxt = "n")
Days<-cut(messdaten$TIMESTAMP, "1 day", right=T)
axis.POSIXct(1, at=Days, format="%d.%m.")
# Temp ganz
plot(messdaten$TIMESTAMP, messdaten$AirTC_Avg, type='l', main="Temperatur", ylim=c(0,30), col="red", xlab="Zeitraum", ylab="Temperatur [°C]", xaxt = "n")
Days<-cut(messdaten$TIMESTAMP, "1 day", right=T)
axis.POSIXct(1, at=Days, format="%d.%m.")
mean(messdaten$AirTC_Avg)
check <- function(x) {
if (x > 0) {
result <- "Positive"
}
else if (x < 0) {
result <- "Negative"
}
else {
result <- "Zero"
}
return(result)
}
check(1)
args <- commandArgs(trailingOnly = TRUE)
return(args)
devtools::install_github("16EAGLE/getSpatialData")
install.packages("devtools")
devtools::install_github("16EAGLE/getSpatialData")
library(getSpatialData)
library(getSpatialData)
update.packages("fastmap")
library(getSpatialData)
install.packages("fastmap")
install.packages("fastmap")
library(getSpatialData)
library(getSpatialData)
data("aoi_data")
# Define an area of interest (AOI):
# Use the example AOI or draw an AOI by calling set_aoi():
set_aoi(aoi_data[[1]])
# View the AOI:
view_aoi()
load("~/github/backend/public/aoi_data.rda")
load("/Users/freddy/github/backend/public/aoi_data.rda")
print(data)
login_earthdata(username = "geotechwwu")
records <- get_records(time_range = c("2020-05-15", "2020-05-30"),
products = c("Sentinel-2"))
get_products()
services()
records <- get_records(time_range = c("2020-05-15", "2020-05-30"),
products = c("Sentinel-2", "LANDSAT_8_C1"))
login_CopHub(username = "geotechwwu")
records <- get_records(time_range = c("2020-05-15", "2020-05-30"),
products = c("Sentinel-2", "LANDSAT_8_C1"))
records <- get_records(time_range = c("2020-05-15", "2020-05-30"),
products = c("Sentinel-2"))
View(records)
rm(list=ls())
#major required packages:
needs(raster, lib.loc="./r-library")
needs(caret)
install.packages("needs")
rm(list=ls())
#major required packages:
needs(raster, lib.loc="./r-library")
library(needs)
rm(list=ls())
#major required packages:
needs(raster, lib.loc="./r-library")
install.packages("needs")
library(needs)
rm(list=ls())
#major required packages:
needs(raster, lib.loc="./r-library")
needs(caret)
needs(mapview)
needs(caret)
needs(mapview)
needs(sf)
#needs(devtools)
#install_github("HannaMeyer/CAST")
needs(CAST)
#additional required packages:
needs(tmap)
needs(latticeExtra)
needs(doParallel)
needs(parallel)
needs(Orcs)
sen_ms <- stack("Files/Sen_Muenster.grd")
setwd("/Users/freddy/github/r-backend")
sen_ms <- stack("Files/Sen_Muenster.grd")
sen_mr <- stack("Files/Sen_Marburg.grd")
trainSites <- read_sf("Files/trainingsites_muenster.gpkg")
extr_pixel <- extract(sen_ms, trainSites, df=TRUE)
extr <- merge(extr_pixel, trainSites, by.x="ID", by.y="PolygonID")
set.seed(100)
trainids <- createDataPartition(extr$ID,list=FALSE,p=0.05)
trainDat <- extr[trainids,]
predictors <- names(sen_ms)
response <- "Label"
indices <- CreateSpacetimeFolds(trainDat,spacevar = "ID",k=3,class="Label")
ctrl <- trainControl(method="cv",
index = indices$index,
savePredictions = TRUE)
# train the model
set.seed(100)
model <- ffs(trainDat[,predictors],
trainDat[,response],
method="rf",
metric="Kappa",
trControl=ctrl,
importance=TRUE,
ntree=75)
return(trainDat)
rm(list=ls())
#major required packages:
needs(raster, lib.loc="./r-library")
needs(caret)
needs(mapview)
needs(sf)
#needs(devtools)
#install_github("HannaMeyer/CAST")
needs(CAST)
#additional required packages:
needs(tmap)
needs(latticeExtra)
needs(doParallel)
needs(parallel)
needs(Orcs)
setwd("/Users/freddy/github/r-backend")
sen_ms <- stack("Files/Sen_Muenster.grd")
#print(sen_ms)
# rgbplot_ms <- spplot(sen_ms[[1]],  col.regions="transparent",sp.layout =rgb2spLayout(sen_ms[[1:3]], quantiles = c(0.02, 0.98), alpha = 1))
sen_mr <- stack("Files/Sen_Marburg.grd")
# rgbplot_mr <- spplot(sen_mr[[1]],  col.regions="transparent",sp.layout =rgb2spLayout(sen_mr[[1:3]], quantiles = c(0.02, 0.98), alpha = 1))
# plot(sen_ms)
trainSites <- read_sf("Files/trainingsites_muenster.gpkg")
#print(trainSites)
#viewRGB(sen_ms, r = 3, g = 2, b = 1, map.types = "Esri.WorldImagery")
# mapview(trainSites)
extr_pixel <- extract(sen_ms, trainSites, df=TRUE)
extr <- merge(extr_pixel, trainSites, by.x="ID", by.y="PolygonID")
# head(extr)
set.seed(100)
trainids <- createDataPartition(extr$ID,list=FALSE,p=0.05)
trainDat <- extr[trainids,]
predictors <- names(sen_ms)
response <- "Label"
indices <- CreateSpacetimeFolds(trainDat,spacevar = "ID",k=3,class="Label")
ctrl <- trainControl(method="cv",
index = indices$index,
savePredictions = TRUE)
# train the model
set.seed(100)
model <- ffs(trainDat[,predictors],
trainDat[,response],
method="rf",
metric="Kappa",
trControl=ctrl,
importance=TRUE,
ntree=75)
rm(list=ls())
#major required packages:
needs(raster, lib.loc="./r-library")
Sys.setenv(LANG = "en")
